{"version":3,"file":"bundle.cjs.js","sources":["bundle.esm.js"],"sourcesContent":["import { __extends, __rest, __assign } from 'tslib';\nimport { ApolloLink, fromError, Observable } from 'apollo-link';\nimport { checkFetcher, selectURI, selectHttpOptionsAndBody, fallbackHttpConfig, serializeFetchParameter, createSignalIfSupported, parseAndCheckHttpResponse } from 'apollo-link-http-common';\nimport { BatchLink } from 'apollo-link-batch';\n\nvar BatchHttpLink = (function (_super) {\n    __extends(BatchHttpLink, _super);\n    function BatchHttpLink(fetchParams) {\n        var _this = _super.call(this) || this;\n        var _a = fetchParams || {}, _b = _a.uri, uri = _b === void 0 ? '/graphql' : _b, fetcher = _a.fetch, includeExtensions = _a.includeExtensions, batchInterval = _a.batchInterval, batchMax = _a.batchMax, batchKey = _a.batchKey, requestOptions = __rest(_a, [\"uri\", \"fetch\", \"includeExtensions\", \"batchInterval\", \"batchMax\", \"batchKey\"]);\n        checkFetcher(fetcher);\n        if (!fetcher) {\n            fetcher = fetch;\n        }\n        var linkConfig = {\n            http: { includeExtensions: includeExtensions },\n            options: requestOptions.fetchOptions,\n            credentials: requestOptions.credentials,\n            headers: requestOptions.headers,\n        };\n        _this.batchInterval = batchInterval || 10;\n        _this.batchMax = batchMax || 10;\n        var batchHandler = function (operations) {\n            var chosenURI = selectURI(operations[0], uri);\n            var context = operations[0].getContext();\n            var clientAwarenessHeaders = {};\n            if (context.clientAwareness) {\n                var _a = context.clientAwareness, name_1 = _a.name, version = _a.version;\n                if (name_1) {\n                    clientAwarenessHeaders['apollographql-client-name'] = name_1;\n                }\n                if (version) {\n                    clientAwarenessHeaders['apollographql-client-version'] = version;\n                }\n            }\n            var contextConfig = {\n                http: context.http,\n                options: context.fetchOptions,\n                credentials: context.credentials,\n                headers: __assign({}, clientAwarenessHeaders, context.headers),\n            };\n            var optsAndBody = operations.map(function (operation) {\n                return selectHttpOptionsAndBody(operation, fallbackHttpConfig, linkConfig, contextConfig);\n            });\n            var loadedBody = optsAndBody.map(function (_a) {\n                var body = _a.body;\n                return body;\n            });\n            var options = optsAndBody[0].options;\n            if (options.method === 'GET') {\n                return fromError(new Error('apollo-link-batch-http does not support GET requests'));\n            }\n            try {\n                options.body = serializeFetchParameter(loadedBody, 'Payload');\n            }\n            catch (parseError) {\n                return fromError(parseError);\n            }\n            var controller;\n            if (!options.signal) {\n                var _b = createSignalIfSupported(), _controller = _b.controller, signal = _b.signal;\n                controller = _controller;\n                if (controller)\n                    options.signal = signal;\n            }\n            return new Observable(function (observer) {\n                fetcher(chosenURI, options)\n                    .then(function (response) {\n                    operations.forEach(function (operation) { return operation.setContext({ response: response }); });\n                    return response;\n                })\n                    .then(parseAndCheckHttpResponse(operations))\n                    .then(function (result) {\n                    observer.next(result);\n                    observer.complete();\n                    return result;\n                })\n                    .catch(function (err) {\n                    if (err.name === 'AbortError')\n                        return;\n                    if (err.result && err.result.errors && err.result.data) {\n                        observer.next(err.result);\n                    }\n                    observer.error(err);\n                });\n                return function () {\n                    if (controller)\n                        controller.abort();\n                };\n            });\n        };\n        batchKey =\n            batchKey ||\n                (function (operation) {\n                    var context = operation.getContext();\n                    var contextConfig = {\n                        http: context.http,\n                        options: context.fetchOptions,\n                        credentials: context.credentials,\n                        headers: context.headers,\n                    };\n                    return selectURI(operation, uri) + JSON.stringify(contextConfig);\n                });\n        _this.batcher = new BatchLink({\n            batchInterval: _this.batchInterval,\n            batchMax: _this.batchMax,\n            batchKey: batchKey,\n            batchHandler: batchHandler,\n        });\n        return _this;\n    }\n    BatchHttpLink.prototype.request = function (operation) {\n        return this.batcher.request(operation);\n    };\n    return BatchHttpLink;\n}(ApolloLink));\n\nexport { BatchHttpLink };\n//# sourceMappingURL=bundle.esm.js.map\n"],"names":["__extends","__rest","checkFetcher","selectURI","__assign","selectHttpOptionsAndBody","fallbackHttpConfig","fromError","serializeFetchParameter","createSignalIfSupported","Observable","parseAndCheckHttpResponse","BatchLink","ApolloLink"],"mappings":";;;;;;;;;AAKG,IAAC,aAAa,IAAI,UAAU,MAAM,EAAE;IACnCA,eAAS,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IACjC,SAAS,aAAa,CAAC,WAAW,EAAE;QAChC,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;QACtC,IAAI,EAAE,GAAG,WAAW,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,UAAU,GAAG,EAAE,EAAE,OAAO,GAAG,EAAE,CAAC,KAAK,EAAE,iBAAiB,GAAG,EAAE,CAAC,iBAAiB,EAAE,aAAa,GAAG,EAAE,CAAC,aAAa,EAAE,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,cAAc,GAAGC,YAAM,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,mBAAmB,EAAE,eAAe,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC;QAC5UC,iCAAY,CAAC,OAAO,CAAC,CAAC;QACtB,IAAI,CAAC,OAAO,EAAE;YACV,OAAO,GAAG,KAAK,CAAC;SACnB;QACD,IAAI,UAAU,GAAG;YACb,IAAI,EAAE,EAAE,iBAAiB,EAAE,iBAAiB,EAAE;YAC9C,OAAO,EAAE,cAAc,CAAC,YAAY;YACpC,WAAW,EAAE,cAAc,CAAC,WAAW;YACvC,OAAO,EAAE,cAAc,CAAC,OAAO;SAClC,CAAC;QACF,KAAK,CAAC,aAAa,GAAG,aAAa,IAAI,EAAE,CAAC;QAC1C,KAAK,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;QAChC,IAAI,YAAY,GAAG,UAAU,UAAU,EAAE;YACrC,IAAI,SAAS,GAAGC,8BAAS,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAC9C,IAAI,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;YACzC,IAAI,sBAAsB,GAAG,EAAE,CAAC;YAChC,IAAI,OAAO,CAAC,eAAe,EAAE;gBACzB,IAAI,EAAE,GAAG,OAAO,CAAC,eAAe,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI,EAAE,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC;gBACzE,IAAI,MAAM,EAAE;oBACR,sBAAsB,CAAC,2BAA2B,CAAC,GAAG,MAAM,CAAC;iBAChE;gBACD,IAAI,OAAO,EAAE;oBACT,sBAAsB,CAAC,8BAA8B,CAAC,GAAG,OAAO,CAAC;iBACpE;aACJ;YACD,IAAI,aAAa,GAAG;gBAChB,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,OAAO,EAAE,OAAO,CAAC,YAAY;gBAC7B,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,OAAO,EAAEC,cAAQ,CAAC,EAAE,EAAE,sBAAsB,EAAE,OAAO,CAAC,OAAO,CAAC;aACjE,CAAC;YACF,IAAI,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,UAAU,SAAS,EAAE;gBAClD,OAAOC,6CAAwB,CAAC,SAAS,EAAEC,uCAAkB,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;aAC7F,CAAC,CAAC;YACH,IAAI,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE;gBAC3C,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;gBACnB,OAAO,IAAI,CAAC;aACf,CAAC,CAAC;YACH,IAAI,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YACrC,IAAI,OAAO,CAAC,MAAM,KAAK,KAAK,EAAE;gBAC1B,OAAOC,oBAAS,CAAC,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC,CAAC;aACvF;YACD,IAAI;gBACA,OAAO,CAAC,IAAI,GAAGC,4CAAuB,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;aACjE;YACD,OAAO,UAAU,EAAE;gBACf,OAAOD,oBAAS,CAAC,UAAU,CAAC,CAAC;aAChC;YACD,IAAI,UAAU,CAAC;YACf,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACjB,IAAI,EAAE,GAAGE,4CAAuB,EAAE,EAAE,WAAW,GAAG,EAAE,CAAC,UAAU,EAAE,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;gBACpF,UAAU,GAAG,WAAW,CAAC;gBACzB,IAAI,UAAU;oBACV,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;aAC/B;YACD,OAAO,IAAIC,qBAAU,CAAC,UAAU,QAAQ,EAAE;gBACtC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC;qBACtB,IAAI,CAAC,UAAU,QAAQ,EAAE;oBAC1B,UAAU,CAAC,OAAO,CAAC,UAAU,SAAS,EAAE,EAAE,OAAO,SAAS,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;oBAClG,OAAO,QAAQ,CAAC;iBACnB,CAAC;qBACG,IAAI,CAACC,8CAAyB,CAAC,UAAU,CAAC,CAAC;qBAC3C,IAAI,CAAC,UAAU,MAAM,EAAE;oBACxB,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACtB,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBACpB,OAAO,MAAM,CAAC;iBACjB,CAAC;qBACG,KAAK,CAAC,UAAU,GAAG,EAAE;oBACtB,IAAI,GAAG,CAAC,IAAI,KAAK,YAAY;wBACzB,OAAO;oBACX,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE;wBACpD,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;qBAC7B;oBACD,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACvB,CAAC,CAAC;gBACH,OAAO,YAAY;oBACf,IAAI,UAAU;wBACV,UAAU,CAAC,KAAK,EAAE,CAAC;iBAC1B,CAAC;aACL,CAAC,CAAC;SACN,CAAC;QACF,QAAQ;YACJ,QAAQ;iBACH,UAAU,SAAS,EAAE;oBAClB,IAAI,OAAO,GAAG,SAAS,CAAC,UAAU,EAAE,CAAC;oBACrC,IAAI,aAAa,GAAG;wBAChB,IAAI,EAAE,OAAO,CAAC,IAAI;wBAClB,OAAO,EAAE,OAAO,CAAC,YAAY;wBAC7B,WAAW,EAAE,OAAO,CAAC,WAAW;wBAChC,OAAO,EAAE,OAAO,CAAC,OAAO;qBAC3B,CAAC;oBACF,OAAOR,8BAAS,CAAC,SAAS,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;iBACpE,CAAC,CAAC;QACX,KAAK,CAAC,OAAO,GAAG,IAAIS,yBAAS,CAAC;YAC1B,aAAa,EAAE,KAAK,CAAC,aAAa;YAClC,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,QAAQ,EAAE,QAAQ;YAClB,YAAY,EAAE,YAAY;SAC7B,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;KAChB;IACD,aAAa,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,SAAS,EAAE;QACnD,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KAC1C,CAAC;IACF,OAAO,aAAa,CAAC;CACxB,CAACC,qBAAU,CAAC,CAAC;;;;"}